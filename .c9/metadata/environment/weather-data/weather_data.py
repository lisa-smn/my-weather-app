{"filter":false,"title":"weather_data.py","tooltip":"/weather-data/weather_data.py","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":0,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["from flask import Flask, request, jsonify","import mysql.connector","import os","","app = Flask(__name__)","","# Datenbankkonfiguration aus Umgebungsvariablen laden","db_config = {","    'user': os.getenv('DB_USER', 'admin'),","    'password': os.getenv('DB_PASSWORD', 'your-password'),","    'host': os.getenv('DB_HOST', 'my-weather-app-db.cnla9t80uygd.us-east-1.rds.amazonaws.com'),","    'database': os.getenv('DB_NAME', 'weatherdb')","}","","def get_db_connection():","    return mysql.connector.connect(**db_config)","","@app.route('/weather', methods=['GET'])","def get_weather():","    conn = get_db_connection()","    cursor = conn.cursor(dictionary=True)","    cursor.execute('SELECT * FROM weather')","    results = cursor.fetchall()","    cursor.close()","    conn.close()","    return jsonify(results)","","@app.route('/weather', methods=['POST'])","def add_weather():","    data = request.get_json()","    conn = get_db_connection()","    cursor = conn.cursor()","    cursor.execute(","        'INSERT INTO weather (city, temperature, description) VALUES (%s, %s, %s)',","        (data['city'], data['temperature'], data['description'])","    )","    conn.commit()","    cursor.close()","    conn.close()","    return '', 201","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=5001)",""],"id":1}],[{"start":{"row":42,"column":36},"end":{"row":42,"column":37},"action":"remove","lines":["1"],"id":2}],[{"start":{"row":42,"column":36},"end":{"row":42,"column":37},"action":"insert","lines":["2"],"id":3}],[{"start":{"row":42,"column":36},"end":{"row":42,"column":37},"action":"remove","lines":["2"],"id":4}],[{"start":{"row":42,"column":36},"end":{"row":42,"column":37},"action":"insert","lines":["1"],"id":5}],[{"start":{"row":0,"column":0},"end":{"row":43,"column":0},"action":"remove","lines":["from flask import Flask, request, jsonify","import mysql.connector","import os","","app = Flask(__name__)","","# Datenbankkonfiguration aus Umgebungsvariablen laden","db_config = {","    'user': os.getenv('DB_USER', 'admin'),","    'password': os.getenv('DB_PASSWORD', 'your-password'),","    'host': os.getenv('DB_HOST', 'my-weather-app-db.cnla9t80uygd.us-east-1.rds.amazonaws.com'),","    'database': os.getenv('DB_NAME', 'weatherdb')","}","","def get_db_connection():","    return mysql.connector.connect(**db_config)","","@app.route('/weather', methods=['GET'])","def get_weather():","    conn = get_db_connection()","    cursor = conn.cursor(dictionary=True)","    cursor.execute('SELECT * FROM weather')","    results = cursor.fetchall()","    cursor.close()","    conn.close()","    return jsonify(results)","","@app.route('/weather', methods=['POST'])","def add_weather():","    data = request.get_json()","    conn = get_db_connection()","    cursor = conn.cursor()","    cursor.execute(","        'INSERT INTO weather (city, temperature, description) VALUES (%s, %s, %s)',","        (data['city'], data['temperature'], data['description'])","    )","    conn.commit()","    cursor.close()","    conn.close()","    return '', 201","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=5001)",""],"id":6},{"start":{"row":0,"column":0},"end":{"row":56,"column":0},"action":"insert","lines":["from flask import Flask, request, jsonify","import mysql.connector","import os","import requests","from apscheduler.schedulers.background import BackgroundScheduler","","app = Flask(__name__)","","# Datenbankkonfiguration aus Umgebungsvariablen laden","db_config = {","    'user': os.getenv('DB_USER', 'admin'),","    'password': os.getenv('DB_PASSWORD', 'your-password'),","    'host': os.getenv('DB_HOST', 'my-weather-app-db.cnla9t80uygd.us-east-1.rds.amazonaws.com'),","    'database': os.getenv('DB_NAME', 'weatherdb')","}","","def get_db_connection():","    return mysql.connector.connect(**db_config)","","def fetch_and_store_weather(city):","    api_key = os.getenv('API_KEY')","    url = f\"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric\"","    response = requests.get(url)","    if response.status_code == 200:","        data = response.json()","        conn = get_db_connection()","        cursor = conn.cursor()","        cursor.execute(","            'INSERT INTO weather (city, temperature, description) VALUES (%s, %s, %s)',","            (data['name'], data['main']['temp'], data['weather'][0]['description'])","        )","        conn.commit()","        cursor.close()","        conn.close()","","@app.route('/weather', methods=['GET'])","def get_weather():","    conn = get_db_connection()","    cursor = conn.cursor(dictionary=True)","    cursor.execute('SELECT * FROM weather')","    results = cursor.fetchall()","    cursor.close()","    conn.close()","    return jsonify(results)","","@app.route('/weather', methods=['POST'])","def add_weather():","    data = request.get_json()","    fetch_and_store_weather(data['city'])","    return '', 201","","if __name__ == '__main__':","    scheduler = BackgroundScheduler()","    scheduler.add_job(func=fetch_and_store_weather, trigger=\"interval\", seconds=3600, args=['Hamburg'])  # Fetched weather data for Hamburg every hour","    scheduler.start()","    app.run(host='0.0.0.0', port=5001)",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":6.6,"selection":{"start":{"row":0,"column":0},"end":{"row":56,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1719415640243,"hash":"6df3c8bcb2fe2b82d812c3e22924dc5bd62e336f"}