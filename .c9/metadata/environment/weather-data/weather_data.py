{"filter":false,"title":"weather_data.py","tooltip":"/weather-data/weather_data.py","undoManager":{"mark":19,"position":19,"stack":[[{"start":{"row":0,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["from flask import Flask, request, jsonify","import mysql.connector","import os","","app = Flask(__name__)","","# Datenbankkonfiguration aus Umgebungsvariablen laden","db_config = {","    'user': os.getenv('DB_USER', 'admin'),","    'password': os.getenv('DB_PASSWORD', 'your-password'),","    'host': os.getenv('DB_HOST', 'my-weather-app-db.cnla9t80uygd.us-east-1.rds.amazonaws.com'),","    'database': os.getenv('DB_NAME', 'weatherdb')","}","","def get_db_connection():","    return mysql.connector.connect(**db_config)","","@app.route('/weather', methods=['GET'])","def get_weather():","    conn = get_db_connection()","    cursor = conn.cursor(dictionary=True)","    cursor.execute('SELECT * FROM weather')","    results = cursor.fetchall()","    cursor.close()","    conn.close()","    return jsonify(results)","","@app.route('/weather', methods=['POST'])","def add_weather():","    data = request.get_json()","    conn = get_db_connection()","    cursor = conn.cursor()","    cursor.execute(","        'INSERT INTO weather (city, temperature, description) VALUES (%s, %s, %s)',","        (data['city'], data['temperature'], data['description'])","    )","    conn.commit()","    cursor.close()","    conn.close()","    return '', 201","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=5001)",""],"id":20}],[{"start":{"row":42,"column":36},"end":{"row":42,"column":37},"action":"remove","lines":["1"],"id":21}],[{"start":{"row":42,"column":36},"end":{"row":42,"column":37},"action":"insert","lines":["2"],"id":22}],[{"start":{"row":42,"column":36},"end":{"row":42,"column":37},"action":"remove","lines":["2"],"id":23}],[{"start":{"row":42,"column":36},"end":{"row":42,"column":37},"action":"insert","lines":["1"],"id":24}],[{"start":{"row":0,"column":0},"end":{"row":43,"column":0},"action":"remove","lines":["from flask import Flask, request, jsonify","import mysql.connector","import os","","app = Flask(__name__)","","# Datenbankkonfiguration aus Umgebungsvariablen laden","db_config = {","    'user': os.getenv('DB_USER', 'admin'),","    'password': os.getenv('DB_PASSWORD', 'your-password'),","    'host': os.getenv('DB_HOST', 'my-weather-app-db.cnla9t80uygd.us-east-1.rds.amazonaws.com'),","    'database': os.getenv('DB_NAME', 'weatherdb')","}","","def get_db_connection():","    return mysql.connector.connect(**db_config)","","@app.route('/weather', methods=['GET'])","def get_weather():","    conn = get_db_connection()","    cursor = conn.cursor(dictionary=True)","    cursor.execute('SELECT * FROM weather')","    results = cursor.fetchall()","    cursor.close()","    conn.close()","    return jsonify(results)","","@app.route('/weather', methods=['POST'])","def add_weather():","    data = request.get_json()","    conn = get_db_connection()","    cursor = conn.cursor()","    cursor.execute(","        'INSERT INTO weather (city, temperature, description) VALUES (%s, %s, %s)',","        (data['city'], data['temperature'], data['description'])","    )","    conn.commit()","    cursor.close()","    conn.close()","    return '', 201","","if __name__ == '__main__':","    app.run(host='0.0.0.0', port=5001)",""],"id":25},{"start":{"row":0,"column":0},"end":{"row":56,"column":0},"action":"insert","lines":["from flask import Flask, request, jsonify","import mysql.connector","import os","import requests","from apscheduler.schedulers.background import BackgroundScheduler","","app = Flask(__name__)","","# Datenbankkonfiguration aus Umgebungsvariablen laden","db_config = {","    'user': os.getenv('DB_USER', 'admin'),","    'password': os.getenv('DB_PASSWORD', 'your-password'),","    'host': os.getenv('DB_HOST', 'my-weather-app-db.cnla9t80uygd.us-east-1.rds.amazonaws.com'),","    'database': os.getenv('DB_NAME', 'weatherdb')","}","","def get_db_connection():","    return mysql.connector.connect(**db_config)","","def fetch_and_store_weather(city):","    api_key = os.getenv('API_KEY')","    url = f\"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric\"","    response = requests.get(url)","    if response.status_code == 200:","        data = response.json()","        conn = get_db_connection()","        cursor = conn.cursor()","        cursor.execute(","            'INSERT INTO weather (city, temperature, description) VALUES (%s, %s, %s)',","            (data['name'], data['main']['temp'], data['weather'][0]['description'])","        )","        conn.commit()","        cursor.close()","        conn.close()","","@app.route('/weather', methods=['GET'])","def get_weather():","    conn = get_db_connection()","    cursor = conn.cursor(dictionary=True)","    cursor.execute('SELECT * FROM weather')","    results = cursor.fetchall()","    cursor.close()","    conn.close()","    return jsonify(results)","","@app.route('/weather', methods=['POST'])","def add_weather():","    data = request.get_json()","    fetch_and_store_weather(data['city'])","    return '', 201","","if __name__ == '__main__':","    scheduler = BackgroundScheduler()","    scheduler.add_job(func=fetch_and_store_weather, trigger=\"interval\", seconds=3600, args=['Hamburg'])  # Fetched weather data for Hamburg every hour","    scheduler.start()","    app.run(host='0.0.0.0', port=5001)",""]}],[{"start":{"row":53,"column":4},"end":{"row":53,"column":150},"action":"remove","lines":["scheduler.add_job(func=fetch_and_store_weather, trigger=\"interval\", seconds=3600, args=['Hamburg'])  # Fetched weather data for Hamburg every hour"],"id":26},{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"remove","lines":["    "]},{"start":{"row":52,"column":37},"end":{"row":53,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":52,"column":4},"end":{"row":54,"column":38},"action":"remove","lines":["scheduler = BackgroundScheduler()","    scheduler.start()","    app.run(host='0.0.0.0', port=5001)"],"id":27},{"start":{"row":52,"column":4},"end":{"row":52,"column":38},"action":"insert","lines":["app.run(host='0.0.0.0', port=5001)"]}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":65},"action":"remove","lines":["from apscheduler.schedulers.background import BackgroundScheduler"],"id":28},{"start":{"row":3,"column":15},"end":{"row":4,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":18,"column":0},"end":{"row":32,"column":20},"action":"remove","lines":["def fetch_and_store_weather(city):","    api_key = os.getenv('API_KEY')","    url = f\"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric\"","    response = requests.get(url)","    if response.status_code == 200:","        data = response.json()","        conn = get_db_connection()","        cursor = conn.cursor()","        cursor.execute(","            'INSERT INTO weather (city, temperature, description) VALUES (%s, %s, %s)',","            (data['name'], data['main']['temp'], data['weather'][0]['description'])","        )","        conn.commit()","        cursor.close()","        conn.close()"],"id":29},{"start":{"row":18,"column":0},"end":{"row":37,"column":63},"action":"insert","lines":["def fetch_and_store_weather(city):","    api_key = os.getenv('API_KEY')","    url = f\"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric\"","    try:","        response = requests.get(url)","        response.raise_for_status()","        data = response.json()","        conn = get_db_connection()","        cursor = conn.cursor()","        cursor.execute(","            'INSERT INTO weather (city, temperature, description) VALUES (%s, %s, %s)',","            (data['name'], data['main']['temp'], data['weather'][0]['description'])","        )","        conn.commit()","        cursor.close()","        conn.close()","    except requests.exceptions.RequestException as e:","        print(f\"Error fetching weather data from API: {e}\")","    except mysql.connector.Error as err:","        print(f\"Error storing weather data to database: {err}\")"]}],[{"start":{"row":10,"column":54},"end":{"row":10,"column":55},"action":"remove","lines":["d"],"id":30},{"start":{"row":10,"column":53},"end":{"row":10,"column":54},"action":"remove","lines":["r"]},{"start":{"row":10,"column":52},"end":{"row":10,"column":53},"action":"remove","lines":["o"]},{"start":{"row":10,"column":51},"end":{"row":10,"column":52},"action":"remove","lines":["w"]},{"start":{"row":10,"column":50},"end":{"row":10,"column":51},"action":"remove","lines":["s"]},{"start":{"row":10,"column":49},"end":{"row":10,"column":50},"action":"remove","lines":["s"]},{"start":{"row":10,"column":48},"end":{"row":10,"column":49},"action":"remove","lines":["a"]},{"start":{"row":10,"column":47},"end":{"row":10,"column":48},"action":"remove","lines":["p"]},{"start":{"row":10,"column":46},"end":{"row":10,"column":47},"action":"remove","lines":["-"]},{"start":{"row":10,"column":45},"end":{"row":10,"column":46},"action":"remove","lines":["r"]},{"start":{"row":10,"column":44},"end":{"row":10,"column":45},"action":"remove","lines":["u"]},{"start":{"row":10,"column":43},"end":{"row":10,"column":44},"action":"remove","lines":["o"]},{"start":{"row":10,"column":42},"end":{"row":10,"column":43},"action":"remove","lines":["y"]}],[{"start":{"row":10,"column":42},"end":{"row":10,"column":43},"action":"insert","lines":["m"],"id":31},{"start":{"row":10,"column":43},"end":{"row":10,"column":44},"action":"insert","lines":["a"]}],[{"start":{"row":10,"column":43},"end":{"row":10,"column":44},"action":"remove","lines":["a"],"id":32}],[{"start":{"row":10,"column":43},"end":{"row":10,"column":44},"action":"insert","lines":["y"],"id":33},{"start":{"row":10,"column":44},"end":{"row":10,"column":45},"action":"insert","lines":["-"]},{"start":{"row":10,"column":45},"end":{"row":10,"column":46},"action":"insert","lines":["w"]},{"start":{"row":10,"column":46},"end":{"row":10,"column":47},"action":"insert","lines":["e"]},{"start":{"row":10,"column":47},"end":{"row":10,"column":48},"action":"insert","lines":["a"]}],[{"start":{"row":10,"column":48},"end":{"row":10,"column":49},"action":"insert","lines":["t"],"id":34},{"start":{"row":10,"column":49},"end":{"row":10,"column":50},"action":"insert","lines":["g"]},{"start":{"row":10,"column":50},"end":{"row":10,"column":51},"action":"insert","lines":["e"]}],[{"start":{"row":10,"column":50},"end":{"row":10,"column":51},"action":"remove","lines":["e"],"id":35},{"start":{"row":10,"column":49},"end":{"row":10,"column":50},"action":"remove","lines":["g"]}],[{"start":{"row":10,"column":49},"end":{"row":10,"column":50},"action":"insert","lines":["t"],"id":36},{"start":{"row":10,"column":50},"end":{"row":10,"column":51},"action":"insert","lines":["h"]},{"start":{"row":10,"column":51},"end":{"row":10,"column":52},"action":"insert","lines":["e"]},{"start":{"row":10,"column":52},"end":{"row":10,"column":53},"action":"insert","lines":["r"]},{"start":{"row":10,"column":53},"end":{"row":10,"column":54},"action":"insert","lines":["-"]},{"start":{"row":10,"column":54},"end":{"row":10,"column":55},"action":"insert","lines":["d"]}],[{"start":{"row":10,"column":55},"end":{"row":10,"column":56},"action":"insert","lines":["b"],"id":37}],[{"start":{"row":10,"column":55},"end":{"row":10,"column":56},"action":"remove","lines":["b"],"id":38},{"start":{"row":10,"column":54},"end":{"row":10,"column":55},"action":"remove","lines":["d"]}],[{"start":{"row":10,"column":54},"end":{"row":10,"column":55},"action":"insert","lines":["a"],"id":39},{"start":{"row":10,"column":55},"end":{"row":10,"column":56},"action":"insert","lines":["p"]},{"start":{"row":10,"column":56},"end":{"row":10,"column":57},"action":"insert","lines":["p"]},{"start":{"row":10,"column":57},"end":{"row":10,"column":58},"action":"insert","lines":["-"]},{"start":{"row":10,"column":58},"end":{"row":10,"column":59},"action":"insert","lines":["d"]},{"start":{"row":10,"column":59},"end":{"row":10,"column":60},"action":"insert","lines":["b"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":13,"column":1},"end":{"row":13,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1719481075192,"hash":"168eba5ec7e7ee52238db9dfd99512cf6c24041d"}