{"filter":false,"title":"test_app.py","tooltip":"/my-weather-app/tests/test_app.py","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["import pytest","from app import app","","@pytest.fixture","def client():","    app.config['TESTING'] = True","    with app.test_client() as client:","        yield client","","def test_weather_route(client):","    response = client.post('/weather', json={'city': 'Hamburg'})","    assert response.status_code == 200","    data = response.get_json()","    assert 'Temperature' in data","    assert 'Humidity' in data","    assert 'Pressure' in data",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":16,"column":0},"action":"remove","lines":["import pytest","from app import app","","@pytest.fixture","def client():","    app.config['TESTING'] = True","    with app.test_client() as client:","        yield client","","def test_weather_route(client):","    response = client.post('/weather', json={'city': 'Hamburg'})","    assert response.status_code == 200","    data = response.get_json()","    assert 'Temperature' in data","    assert 'Humidity' in data","    assert 'Pressure' in data",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["import pytest","from app import app, get_weather","","@pytest.fixture","def client():","    with app.test_client() as client:","        yield client","","def test_get_weather_success(monkeypatch):","    class MockResponse:","        @staticmethod","        def json():","            return {","                'main': {'temp': 20.0, 'humidity': 50, 'pressure': 1012},","                'wind': {'speed': 5.0},","                'weather': [{'description': 'clear sky'}]","            }","        status_code = 200","","    def mock_get(*args, **kwargs):","        return MockResponse()","","    monkeypatch.setattr('requests.get', mock_get)","    weather_info = get_weather('Hamburg')","    assert weather_info['Temperature'] == 20.0","    assert weather_info['Humidity'] == 50","    assert weather_info['Pressure'] == 1012","    assert weather_info['Weather Description'] == 'clear sky'","    assert weather_info['Wind Speed'] == 5.0","","def test_weather_endpoint(client, monkeypatch):","    class MockResponse:","        @staticmethod","        def json():","            return {","                'main': {'temp': 20.0, 'humidity': 50, 'pressure': 1012},","                'wind': {'speed': 5.0},","                'weather': [{'description': 'clear sky'}]","            }","        status_code = 200","","    def mock_get(*args, **kwargs):","        return MockResponse()","","    monkeypatch.setattr('requests.get', mock_get)","    response = client.post('/weather', json={'city': 'Hamburg'})","    json_data = response.get_json()","    assert response.status_code == 200","    assert json_data['Temperature'] == 20.0",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":12,"column":13},"end":{"row":12,"column":13},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1719487183140,"hash":"556d2c9e19e43d0a142d54e6a54baa064fb4fbdc"}